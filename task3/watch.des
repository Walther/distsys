
INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI

    root = Tk()
    root.title("Watch")
    g = DWatchGUI(root, eventhandler)

    eventhandler.start()
    root.mainloop()

STATECHART:
    Main [DS]
        Time[CS][DS]
            TimeInc[CS][DS]
        Display[CS][DS]
            Mode[CS][DS]
                Time[DS]
                    UpdateScreen[DS]
                    DoNotUpdateScreen
                Chrono
            Light[CS][DS]
                LightOff[DS]
                LightOn
                LightWait
        Chrono[CS][DS]
            ChronoInc[CS][DS]
        AlarmEdit[CS][DS]
            NotInAlarmEdit[DS]
            GoingToAlarmEdit
            InAlarmEdit
        TimeEdit[CS][DS]
            NotInTimeEdit[DS]
            GoingToTimeEdit
            InTimeEdit
            TurningOffTimeEdit   

    #EditTime
    #IncreaseTime
    #ButtomRightIsPressedFromA
    #ButtomRightIsPressedFromEditTime
    
    #ButtomRightIsPressedFromC
    

TRANSITION:
    S: Main.Time.TimeInc
    N: Main.Time.TimeInc
    T: 1
    O: print "update time"
       g.increaseTimeByOne()
       #g.refreshTimeDisplay()
       #g.refreshDateDisplay()

TRANSITION:
    S: Main.Chrono.ChronoInc
    N: Main.Chrono.ChronoInc
    T: 0.5
    O: print "update chrono"
       g.increaseChronoByOne()

TRANSITION:
    S: Main.Display.Mode.Time.UpdateScreen
    N: Main.Display.Mode.Time.UpdateScreen
    T: 1
    O: g.refreshTimeDisplay()
       g.refreshDateDisplay()

TRANSITION:
    S: Main.Display.Mode.Chrono
    N: Main.Display.Mode.Chrono
    T: 0.5
    O: g.refreshChronoDisplay()
       g.refreshDateDisplay()





TRANSITION:
    S: Main.Display.Light.LightOff
    N: Main.Display.Light.LightOn
    E: lightOn
    O: print "LightOff -> LightOn"
       g.setIndiglo()

TRANSITION:
    S: Main.Display.Light.LightOn
    N: Main.Display.Light.LightWait
    E: lightOff
    O: print "Off in 2 sec"

TRANSITION:
    S: Main.Display.Light.LightWait
    N: Main.Display.Light.LightOff
    T: 2 [OTT]
    O: print "LightOn -> lightOff"
       g.unsetIndiglo()


TRANSITION:
    S: Main.Display.Mode.Time
    N: Main.Display.Mode.Chrono
    E: changeMode
    O: print "Time -> Chrono"
       g.refreshChronoDisplay()

TRANSITION:
    S: Main.Display.Mode.Chrono
    N: Main.Display.Mode.Time
    E: changeMode
    O: print "Chrono -> Time"
       g.refreshTimeDisplay()




TRANSITION:
    S: C
    N: ButtomRightIsPressedFromC
    E: initChrono
    O: print "start chrono"

TRANSITION:
    S: C
    N: ButtomRightIsPressedFromC
    E: initChrono
    O: print "start chrono"





TRANSITION:
    S: Main.TimeEdit.NotInTimeEdit
    N: Main.TimeEdit.GoingToTimeEdit
    E: editTime
    O: print "Going to time edit in 1.5 seconds"

TRANSITION:
    S: Main.TimeEdit.GoingToTimeEdit
    N: Main.TimeEdit.NotInTimeEdit
    E: released
    O: print "Not going to time edit"

TRANSITION:
    S: Main.TimeEdit.GoingToTimeEdit
    N: Main.TimeEdit.InTimeEdit
    T: 1.5
    O: print "Going to time edit now"
       g.startSelection()

#TRANSITION:
#    S: Main.TimeEdit.InTimeEdit
#    N: Main.Display.Mode.Time.DoNotUpdateScreen
#    T: 0.5
#    O: print "No need to update display"

TRANSITION:
    S: Main.TimeEdit.InTimeEdit
    N: Main.TimeEdit.TurningOffTimeEdit
    E: finishEdit
    O: print "Finishing editing time in 2 seconds"

TRANSITION:
    S: Main.TimeEdit.TurningOffTimeEdit
    N: Main.TimeEdit.InTimeEdit
    E: released
    O: print "Staying in time edit"

TRANSITION:
    S: Main.TimeEdit.TurningOffTimeEdit
    N: Main.TimeEdit.NotInTimeEdit
    T: 2
    O: print "Turning off time edit"
       g.stopSelection()

#TRANSITION:
#    S: Main.Display.Mode.Time.DoNotUpdateScreen
#    N: Main.Display.Mode.Time.UpdateScreen
#    E: finishEdit
#    O: print "Update time display every second"



TRANSITION:
    S: EditTime
    N: IncreaseTime
    E: increase
    O: print "EditTime -> IncreaseTime, Holding bottom left pressed"
       g.increaseSelection()

TRANSITION:
    S: IncreaseTime
    N: IncreaseTime
    T: 0.3
    O: print "IncreaseTime -> IncreaseTime, Increasing time"
       g.increaseSelection()

TRANSITION:
    S: IncreaseTime
    N: EditTime
    E: stopInc
    O: print "IncreaseTime -> EditTime, Released buttom left button"

TRANSITION:
    S: EditTime
    N: EditTime
    E: editTime
    O: print "EditTime -> EditTime, going to next selection"
       g.selectNext()       

TRANSITION:
    S: EditTime
    N: A
    T: 5
    O: print "EditTime -> A, Leaving time editing"
       g.stopSelection()


TRANSITION:
    S: Main.Time.TimeInc
    N: Main.AlarmEdit.GoingToAlarmEdit
    E: setAlarm
    O: print "Going to alarm edit in 1.5 sec"

TRANSITION:
    S: Main.AlarmEdit.GoingToAlarmEdit
    N: Main.Time.TimeInc
    E: onoff
    O: print "Alarm set"
       g.setAlarm()

TRANSITION:
    S: Main.AlarmEdit.GoingToAlarmEdit
    N: Main.AlarmEdit.InAlarmEdit
    T: 1.5
    O: print "Going to alarm edit now"
       g.startSelection()

#TRANSITION:
#    S: Main.AlarmEdit.InAlarmEdit
#    N: Main.Display.Mode.Time.DoNotUpdateScreen
#    T: 0.5
#    O: print "No need to update display"

#TRANSITION:
#    S: Main.AlarmEdit.InAlarmEdit
#    N: 
